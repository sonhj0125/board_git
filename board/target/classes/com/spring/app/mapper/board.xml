<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다. 그래서 namespace에 대부분 파일이름을 넣어준다.) ==== -->
<mapper namespace="board">

	<insert id="test_insert">
		insert into spring_test(no, name, writeday)
		values(101, '이순신', default)
	</insert>
	
	<!--  !!!! 주의해야할 사항은 리턴타입이 List<E> 이더라도 resultType 은 E 으로 해야만 한다. !!!! --> 
	<select id="test_select" resultType="com.spring.app.board.domain.TestVO"> 
		select no, name, to_char(writeday, 'yyyy-mm-dd hh24:mi:ss') AS writeday
		from spring_test
		order by no asc
	</select>
	
	
	<select id="test_select_vo2" resultType="com.spring.app.board.domain.TestVO2"> 
		select no, name, writeday
		from spring_test
		order by no asc
	</select>
	
	
	
	<!-- Map 사용 시  -->
	<resultMap type="HashMap" id="testMap">
		<result property="NO" column="no" javaType="String"/>
		<result property="NAME" column="name" javaType="String"/>
		<result property="WRITEDAY" column="writeday" javaType="String"/>
	</resultMap>
	
	<select id="test_select_map" resultMap="testMap"> 
		select no, name, to_char(writeday, 'yyyy-mm-dd hh24:mi:ss') AS writeday
		from spring_test
		order by no asc
	</select>
	
	
	
	
	
	<insert id="test_insert_vo" parameterType="com.spring.app.board.domain.TestVO">
		insert into spring_test(no, name, writeday)
		values(#{no},#{name}, default)	<!-- #{get 다음에 어떤것(예:getNo, getName)}이 들어간다. -->
	</insert>
	
	
	<insert id="test_insert_vo2" parameterType="com.spring.app.board.domain.TestVO2">
		insert into spring_test(no, name, writeday)
		values(#{no},#{name}, #{writeday})	
	</insert>
	
	
	<!-- #### 중요 #### 
       HashMap 타입으로 매개변수를 받아온 것을 꺼내서 사용할때 
       1. 데이터로 사용할때는 #{key명} 이고,
       2. 식별자(테이블명, 컬럼명)로 사용할때는 ${key명} 이고,
       3. myBatis 에서 제공하는 if 엘리먼트나 choose 엘리먼트 안에서 사용할때는  그냥 <if test="key명"> <when test="key명"> 으로 사용한다. 
   	-->
	<insert id="test_insert_map" parameterType="java.util.HashMap">
		insert into spring_test(no, name, writeday)
		values(#{no},#{name}, default)	<!-- #{get 다음에 어떤것(예:getNo, getName)}이 들어간다. -->
	</insert>



<!--게시판 시작  --> 
<!-- // === # 39. 메인페이지 요청 === //  -->
	<resultMap type="HashMap" id="imgmapList">
		<result property="imgno" column="imgno" javaType="String"/>
		<result property="productname" column="productname" javaType="String"/>
		<result property="imgfilename" column="imgfilename" javaType="String"/>
	</resultMap>

	<select id="imgmapList" resultMap="imgmapList"> 
		select imgno, productname, imgfilename
		from tbl_main_image_product
		order by imgno asc
	</select>


	<!-- === #47. 로그인 처리하기 === -->
	<!-- /board/src/main/resources/mybatis/mybatis-config.xml 에서 typeAlias 설정을 해주었기 때문에
		 resultType에 com.spring.app.board.domain.MemberVO 대신 MemberVO만 작성 가능하다.  -->
	<select id="getLoginMember" resultType="MemberVO" parameterType="HashMap">
		SELECT userid, name, coin, point, pwdchangegap,
		       NVL(lastlogingap, trunc(months_between(sysdate, registerday))) AS lastlogingap, 
			   idle, email, mobile, postcode, address, detailaddress, extraaddress 
		FROM 
		( select userid, name, coin, point, 
		         trunc( months_between(sysdate, lastpwdchangedate) ) AS pwdchangegap,
				 registerday, idle, email, mobile, postcode, address, detailaddress, extraaddress 
		  from tbl_member 
		  where status = 1 and userid = #{userid} and pwd = #{pwd}
		) M 
		CROSS JOIN 
		( select trunc( months_between(sysdate, max(logindate)) ) as lastlogingap 
		  from tbl_loginhistory 
		  where fk_userid = #{userid} ) H
	</select>


	<update id="updateIdle" parameterType="String">
		update tbl_member set idle = 1
		where userid = #{userid}
	</update>


	<!-- === #57. 파일첨부가 없는 글쓰기 ===  VO에서 get 다음에 뭐뭐뭐 를 ${}안에 쓰면 됨 근데 컬럼명같이랑 똑같이 해놓음-->
   	<insert id="add" parameterType="boardVO">
         insert into tbl_board(seq, fk_userid, name, subject, content, pw, readCount, regDate, status)
         values(boardSeq.nextval, #{fk_userid}, #{name}, #{subject}, #{content}, #{pw}, default, default, default)
   	</insert>

</mapper>